name: Build and deploy to AWS Fargate

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      CDK_DEFAULT_ACCOUNT: ${{ secrets.CDK_DEFAULT_ACCOUNT }}
      CDK_DEFAULT_REGION: ${{ secrets.CDK_DEFAULT_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 1.17
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: 17

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build with Maven
        run: MAVEN_OPTS='-Dorg.slf4j.simpleLogger.defaultLogLevel=warn' mvn -B clean package jib:build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install CDK
        run: |
          npm install -g aws-cdk

      - name: Bootstrap
        run: |
          pwd
          cd cdk
          cdk bootstrap math-pyramid-fargate  --require-approval=never

      - name: Deploy
        run: |
          pwd
          cd cdk
          cdk deploy math-pyramid-fargate  --require-approval=never

      - name: Get IP of service
        run: |
          aws ecs list-tasks --cluster math-pyramid-fargate-cluster --service math-pyramid-fargate-service
#          aws ecs describe-tasks --cluster math-pyramid-fargate-cluster --tasks arn:aws:ecs:us-east-1:123456789012:task/service/EXAMPLE
#          aws ec2 describe-network-interfaces --network-interface-id eni-0fa40520aeEXAMPLE
